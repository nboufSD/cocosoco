{"version":3,"sources":["components/Pointing.png","components/AudioMuting.svg","components/AudioMutingDisabled.svg","components/CameraMuting.svg","components/CameraMutingDisabled.svg","components/CameraSwitching.svg","lib/video.tsx","actions.ts","reducer.ts","store.ts","components/Participation.tsx","components/AudienceItem.tsx","components/AudienceList.tsx","components/Pointing.tsx","components/Presenter.tsx","components/AudioMuting.tsx","components/CameraMuting.tsx","components/CameraSwitching.tsx","components/ToolItem.tsx","components/ToolList.tsx","components/Room.tsx","components/App.tsx","index.tsx"],"names":["module","exports","currentIndex","getDevices","a","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","nextVideoStream","nextIndex","length","nextDevice","deviceId","getUserMedia","audio","video","stream","actionCreator","actionCreatorFactory","AddPeerAction","ParticipateAction","async","PointPresentationAcrion","RemovePeerAction","SelectPeerAction","SwitchCameraAction","ToggleAudioMutingAction","ToggleCameraMutingAction","OnPeerSelectedAction","OnPresentationPointedAction","onStream","dispatch","store","peerId","state","presenter","room","send","type","onData","data","x","y","reducer","reducerWithInitialState","audiences","isAudioEnabled","isCameraEnabled","pointings","case","audience","_selectedPeerId","Object","assign","done","result","localPeer","localStream","id","map","isEnabled","find","createStore","combineReducers","applyMiddleware","thunk","Participation","props","_onClick","bind","url","URL","document","key","searchParams","get","network","error","e","participate","this","setState","isParticipating","className","onClick","disabled","React","PureComponent","connect","roomId","getState","params","started","Promise","r","peer","Peer","on","joinRoom","mode","failed","AudienceItem","_videoRef","createRef","selectPeer","current","srcObject","playsInline","play","_updateVideo","isMuted","isSelected","muted","ref","AudienceList","Pointing","styles","left","top","style","src","logo","alt","Presenter","target","layerX","layerY","clientWidth","clientHeight","pointPresentation","p","offsetLeft","offsetTop","addEventListener","prevProps","_renderPointings","AudioMuting","logoEnabled","logoDisabled","toggleAudioMuting","getAudioTracks","enabled","CameraMuting","toggleCameraMuting","getVideoTracks","CameraSwitching","switchCamera","getTracks","replaceStream","ToolItem","children","ToolList","Room","App","Fragment","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.60dfcb61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pointing.4cb62ad4.png\";","module.exports = __webpack_public_path__ + \"static/media/AudioMuting.728874bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/AudioMutingDisabled.288ed0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraMuting.6dfcbc6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraMutingDisabled.cd67b22a.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraSwitching.e1a723d2.svg\";","let currentIndex = -1;\n\nasync function getDevices() {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  return devices.filter(device => device.kind === \"videoinput\");\n}\n\nexport async function nextVideoStream() {\n  const devices = await getDevices();\n\n  const nextIndex = currentIndex === devices.length -1 ? 0 : currentIndex + 1;\n  const nextDevice = devices[nextIndex];\n\n  const deviceId = nextDevice.deviceId;\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: { deviceId },\n  });\n\n  currentIndex = nextIndex;\n\n  return stream;\n}\n","import { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nimport Peer from \"skyway-js\";\nimport { actionCreatorFactory } from \"../node_modules/typescript-fsa\";\n\nimport { nextVideoStream } from \"./lib/video\";\nimport { TStore } from \"./store\";\n\nconst actionCreator = actionCreatorFactory()\n\nexport const AddPeerAction = actionCreator<{ peerId: string, stream: any }>(\"ADD_PEER\");\nexport const ParticipateAction = actionCreator.async<\n  {}, { localPeer: Peer, localStream: MediaStream, room: any }, { error: any }\n>(\"PARTICIPATE\");\nexport const PointPresentationAcrion = actionCreator.async<\n  {}, {}, { error: any }\n>(\"POINT_PRESENTATION\");\nexport const RemovePeerAction = actionCreator<{ peerId: string }>(\"REMOVE_PEER\");\nexport const SelectPeerAction = actionCreator.async<{}, {}, { error: any }>(\"SELECT_PEER\");\nexport const SwitchCameraAction = actionCreator.async<\n  {}, { localStream: MediaStream }, { error: any }\n>(\"SWITCH_CAMERA\");\nexport const ToggleAudioMutingAction = actionCreator.async<\n  {}, { isEnabled: boolean }, { error: any }\n>(\"TOGGLE_AUDIO_MUTING\");\nexport const ToggleCameraMutingAction = actionCreator.async<\n  {}, { isEnabled: boolean }, { error: any }\n>(\"TOGGLE_CAMERA_MUTING\");\nexport const OnPeerSelectedAction =\n  actionCreator<{ peerId: string }>(\"ON_PEER_SELECTED\");\nexport const OnPresentationPointedAction =\n  actionCreator<{ peerId: string, x: number, y: number }>(\"ON_PRESENTATION_POINTED\");\n\nexport function participate(key: string, network: \"mesh\" | \"sfu\", roomId: string) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = { key, network, roomId };\n    try {\n      dispatch(ParticipateAction.started(params));\n\n      const localStream = await nextVideoStream();\n      const localPeer: Peer = await new Promise(r => {\n        const peer = new Peer({ key: key });\n        peer.on(\"open\", () => r(peer));\n      });\n\n      const room = localPeer.joinRoom(roomId, {\n        mode: network,\n        stream: localStream\n      });\n\n      room.on(\"peerLeave\", peerId => dispatch(RemovePeerAction({ peerId })));\n      room.on(\"stream\", stream => onStream(dispatch, getState(), stream));\n      room.on(\"data\", ({ data }) => onData(dispatch, data));\n\n      const result = {\n        localPeer,\n        localStream,\n        room,\n      };\n\n      dispatch(ParticipateAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ParticipateAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function pointPresentation(x: number, y: number) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(PointPresentationAcrion.started(params));\n\n      const state = getState()?.state;\n\n      const peerId = state.localPeer?.id;\n\n      if (peerId) {\n        state.room?.send({ type: \"presentation-pointed\", peerId, x, y });\n        // As the room.send does not send to the local peer, update manually.\n        dispatch(OnPresentationPointedAction({ peerId, x, y }));\n      }\n\n      dispatch(PointPresentationAcrion.done({ result: {}, params }));\n    } catch (error) {\n      dispatch(PointPresentationAcrion.failed({ error, params }));\n    }\n  }\n}\n\nexport function selectPeer(peerId: string) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(SelectPeerAction.started(params));\n\n      const room = getState()?.state.room;\n      if (room) {\n        room.send({ type: \"peer-selected\", peerId });\n        // As the room.send does not send to the local peer, update manually.\n        dispatch(OnPeerSelectedAction({ peerId }));\n      }\n\n      dispatch(SelectPeerAction.done({ result: {}, params }));\n    } catch (error) {\n      dispatch(SelectPeerAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function switchCamera() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(SwitchCameraAction.started(params));\n\n      const state = getState()?.state;\n\n      // Close previouse stream.\n      for (const track of state?.localStream?.getTracks() || []) {\n        track.enabled = false;\n      }\n\n      const localStream = await nextVideoStream();\n\n      // parameter of replaceStream is defined as MediaSource, but localStream is MediaStream.\n      // I don't know why..\n      (state?.room as any)?.replaceStream(localStream);\n\n      const result = { localStream };\n\n      dispatch(SwitchCameraAction.done({ result, params }));\n    } catch (error) {\n      dispatch(SwitchCameraAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function toggleAudioMuting() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(ToggleAudioMutingAction.started(params));\n\n      const state = getState()?.state;\n      const isEnabled = !state?.isAudioEnabled;\n      const localStream = state?.localStream;\n\n      for (const track of localStream?.getAudioTracks() || []) {\n        track.enabled = isEnabled;\n      }\n\n      const result = { isEnabled };\n\n      dispatch(ToggleAudioMutingAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ToggleAudioMutingAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function toggleCameraMuting() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(ToggleCameraMutingAction.started(params));\n\n      const state = getState()?.state;\n      const isEnabled = !state?.isCameraEnabled;\n      const localStream = state?.localStream;\n\n      for (const track of localStream?.getVideoTracks() || []) {\n        track.enabled = isEnabled;\n      }\n\n      const result = { isEnabled };\n\n      dispatch(ToggleCameraMutingAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ToggleCameraMutingAction.failed({ error, params }));\n    }\n  }\n}\n\nfunction onStream(dispatch: ThunkDispatch<TStore, void, AnyAction>, store: TStore, stream: any) {\n  dispatch(AddPeerAction({ peerId: stream.peerId, stream }));\n  // Tell who is a presenter now, to peer joined newly.\n  if (store.state.presenter) {\n    store.state.room?.send({ type: \"peer-selected\", peerId: store.state.presenter.peerId });\n  }\n}\n\nfunction onData(dispatch: ThunkDispatch<TStore, void, AnyAction>, data: any) {\n  switch (data.type) {\n    case \"peer-selected\": {\n      dispatch(OnPeerSelectedAction({ peerId: data.peerId }));\n      break;\n    }\n    case \"presentation-pointed\": {\n      dispatch(OnPresentationPointedAction({ peerId: data.peerId, x: data.x, y: data.y }));\n      break;\n    }\n  }\n}\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\n\nimport {\n  AddPeerAction,\n  ParticipateAction,\n  RemovePeerAction,\n  SwitchCameraAction,\n  ToggleAudioMutingAction,\n  ToggleCameraMutingAction,\n  OnPeerSelectedAction,\n  OnPresentationPointedAction,\n} from \"./actions\";\nimport { Member, Pointing } from \"./types\";\n\nexport interface IState {\n  audiences: Member[],\n  isAudioEnabled: boolean,\n  isCameraEnabled: boolean,\n  localPeer?: Peer,\n  localStream?: MediaStream,\n  room?: SFURoom | MeshRoom,\n  pointings: Pointing[],\n  presenter?: Member,\n  // Don't use this. The reason why we need this variable is because the `peer-selected`\n  // event and AddPeerAction timing after joining the room is racing.\n  _selectedPeerId?: string,\n}\n\nconst initialState: IState = {\n  audiences: [],\n  isAudioEnabled: true,\n  isCameraEnabled: true,\n  pointings: [],\n}\n\nexport const reducer = reducerWithInitialState(initialState)\n  .case(AddPeerAction, (state, { peerId, stream }) => {\n    const audience = { peerId, stream };\n    const audiences = [...state.audiences, audience];\n\n    // As the presenter peer joined after firing `peer-selected` event, set as a presenter.\n    const presenter = state._selectedPeerId === peerId ? audience : state.presenter;\n\n    return Object.assign({}, state, { audiences, presenter });\n  })\n  .case(ParticipateAction.done, (state, { result }) => {\n    const { localPeer, localStream, room } = result;\n\n    const audience = {\n      peerId: localPeer.id,\n      stream: localStream,\n    };\n    const audiences = [audience];\n\n    return Object.assign({}, state, { audiences, localPeer, localStream, room });\n  })\n  .case(RemovePeerAction, (state, { peerId }) => {\n    const audiences = state.audiences.filter(a => a.peerId !== peerId);\n    const presenter = state.presenter?.peerId === peerId ? null : state.presenter;\n\n    return Object.assign({}, state, { audiences, presenter });\n  })\n  .case(SwitchCameraAction.done, (state, { result }) => {\n    const { localStream } = result;\n    const peerId = state.localPeer?.id;\n\n    const audiences = state.audiences.map(\n      a => a.peerId === peerId ? { peerId, stream: localStream } : a\n    );\n\n    const presenter = state.presenter?.peerId === peerId\n                        ? { peerId, stream: localStream }\n                        : state.presenter;\n\n    return Object.assign({}, state, { audiences, localStream, presenter });\n  })\n  .case(ToggleAudioMutingAction.done, (state, { result }) => {\n    const { isEnabled } = result;\n\n    return Object.assign({}, state, { isAudioEnabled: isEnabled });\n  })\n  .case(ToggleCameraMutingAction.done, (state, { result }) => {\n    const { isEnabled } = result;\n\n    return Object.assign({}, state, { isCameraEnabled: isEnabled });\n  })\n  .case(OnPeerSelectedAction, (state, { peerId }) => {\n    const presenter = state.audiences.find(a => a.peerId === peerId);\n\n    return Object.assign({}, state, { presenter, _selectedPeerId: peerId });\n  })\n  .case(OnPresentationPointedAction, (state, { peerId, x, y }) => {\n    const pointings = state.pointings.filter(a => a.peerId !== peerId);\n\n    return Object.assign({}, state, { pointings: [...pointings, { peerId, x, y }] });\n  })\n","import { combineReducers, createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer, IState } from \"./reducer\";\n\nexport type TStore = {\n  state: IState\n}\n\nexport const store = createStore(\n  combineReducers<TStore>({\n    state: reducer\n  }),\n  {},\n  applyMiddleware(thunk)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { participate } from \"../actions\"\n\nimport \"./Participation.css\";\n\ninterface IProps {\n  participate: any\n}\n\ninterface IState {\n  key: string | null,\n  network: string | null,\n  room: string | null,\n  error: string | null,\n  isParticipating?: boolean,\n}\n\nclass Participation extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n\n    const url = new URL(document.URL);\n    const key = url.searchParams.get(\"key\");\n    const network = url.searchParams.get(\"network\");\n    const room = url.searchParams.get(\"room\");\n\n    let error = null;\n    if (!key || !network || !room) {\n      error = \"No specific key, network or room\"\n    } else if (network !== \"sfu\" && network !== \"mesh\") {\n      error = \"Network should be 'sfu' or 'mesh'\";\n    }\n\n    this.state = { key, network, room, error };\n  }\n\n  _onClick(e: React.MouseEvent) {\n    const { participate } = this.props;\n    const { key, network, room } = this.state;\n    this.setState({ isParticipating: true });\n    participate(key, network, room);\n  }\n\n  render() {\n    const { room, error, isParticipating } = this.state;\n\n    return (\n      <section className=\"participation\">\n        {\n          error\n            ? <label className=\"participation__error\">{ error }</label>\n            : <button\n                className=\"participation__button\"\n                onClick={this._onClick}\n                disabled={isParticipating}\n              >\n                <label>participate to </label>\n                <label className=\"participation__room\">{ room }</label>\n              </button>\n        }\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  participate: (key: string, network: \"mesh\" | \"sfu\", room: string) => {\n    dispatch(participate(key, network, room));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Participation);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { selectPeer } from \"../actions\"\nimport { Member } from \"../types\";\n\nimport \"./AudienceItem.css\";\n\ninterface IProps {\n  audience: Member,\n  isMuted: boolean,\n  isSelected: boolean,\n  selectPeer: any,\n}\n\nclass AudienceItem extends React.PureComponent<IProps> {\n  // As video.playsInline is not defined in HTMLVideoElement, add \"any\" as well.\n  private _videoRef = React.createRef<HTMLVideoElement | any>();\n\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    const { audience, selectPeer } = this.props;\n    selectPeer(audience.peerId);\n  }\n\n  _updateVideo() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    const { audience } = this.props;\n    video.srcObject = audience.stream;\n    video.playsInline = true;\n    video.play();\n  }\n\n  componentDidMount() {\n    this._updateVideo();\n  }\n\n  componentDidUpdate() {\n    this._updateVideo();\n  }\n\n  render() {\n    const { isMuted, isSelected } = this.props;\n\n    return (\n      <li\n        className={\"audience-item \" + (isSelected ? \"audience-item--selected\" : \"\")}\n        onClick={ this._onClick }\n      >\n        <video className=\"audience-item__video\" muted={isMuted} ref={this._videoRef}></video>\n      </li>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  selectPeer: (peerId: string) => {\n    dispatch(selectPeer(peerId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(AudienceItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { TStore } from \"../store\";\nimport { Member } from \"../types\";\n\nimport AudienceItem from \"./AudienceItem\";\n\nimport \"./AudienceList.css\";\n\ninterface IProps {\n  audiences: Member[],\n  localPeer?: Peer,\n  presenter?: Member,\n}\n\nclass AudienceList extends React.PureComponent<IProps> {\n  render() {\n    const { audiences, localPeer, presenter } = this.props;\n\n    return (\n      <ul className=\"audience-list\">\n        {\n          audiences.map(audience =>\n            <AudienceItem\n              key={ audience.peerId }\n              audience={ audience }\n              isMuted={ audience.peerId === localPeer?.id }\n              isSelected={ audience.peerId === presenter?.peerId }\n            />\n          )\n        }\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    audiences: store.state.audiences,\n    localPeer: store.state.localPeer,\n    presenter: store.state.presenter,\n  }\n}\n\nexport default connect(mapStateToProps)(AudienceList);\n","import React from \"react\";\n\nimport logo from './Pointing.png';\nimport \"./Pointing.css\";\n\ninterface IProps {\n  peerId: string,\n  x: number,\n  y: number,\n}\n\nclass Pointing extends React.PureComponent<IProps> {\n  render() {\n    const { peerId, x, y } = this.props;\n\n    const styles = {\n      left: `${ x }px`,\n      top: `${ y }px`\n    };\n\n    return (\n      <mark className=\"pointing\" style={styles}>\n        <img src={logo} alt={peerId} className=\"pointing__image\" />\n      </mark>\n    );\n  }\n}\n\nexport default Pointing;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { Member, Pointing } from \"../types\";\nimport { pointPresentation } from \"../actions\"\nimport PointingComponent from \"./Pointing\";\n\nimport \"./Presenter.css\";\n\ninterface IProps {\n  localPeer?: Peer,\n  pointings: Pointing[],\n  presenter?: Member,\n  pointPresentation: any,\n}\n\nclass Presenter extends React.PureComponent<IProps> {\n  // As video.playsInline is not defined in HTMLVideoElement, add \"any\" as well.\n  private _videoRef = React.createRef<HTMLVideoElement | any>();\n\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: any) {\n    const { target, layerX, layerY } = e;\n    const { clientWidth, clientHeight } = target;\n    const x = layerX / clientWidth;\n    const y = layerY / clientHeight;\n    this.props.pointPresentation(x, y);\n  }\n\n  _renderPointings() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return null;\n    }\n\n    const { pointings } = this.props;\n    return pointings.map(p => {\n      const peerId = p.peerId;\n      const x = video.offsetLeft + video.clientWidth * p.x;\n      const y = video.offsetTop + video.clientHeight * p.y;\n      return <PointingComponent key={peerId} peerId={peerId} x={x} y={y} />;\n    });\n  }\n\n  componentDidMount() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    // We can't get layerX/layerY from React mouse event.\n    video.addEventListener(\"click\", this._onClick);\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    const { localPeer, presenter } = this.props;\n    if (prevProps.presenter === presenter) {\n      return;\n    }\n\n    if (presenter) {\n      video.muted = localPeer?.id === presenter.peerId;\n      video.srcObject = presenter.stream;\n      video.playsInline = true;\n      video.play();\n    } else {\n      video.srcObject = null;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"presenter\">\n        <video className=\"presenter__video\" ref={this._videoRef}></video>\n        { this._renderPointings() }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    localPeer: store.state.localPeer,\n    pointings: store.state.pointings,\n    presenter: store.state.presenter,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  pointPresentation: (x: number, y: number) => {\n    dispatch(pointPresentation(x, y));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Presenter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { toggleAudioMuting } from \"../actions\"\n\nimport logoEnabled from \"./AudioMuting.svg\";\nimport logoDisabled from \"./AudioMutingDisabled.svg\";\nimport \"./AudioMuting.css\";\n\ninterface IProps {\n  isAudioEnabled: boolean,\n  toggleAudioMuting: any,\n}\n\nclass AudioMuting extends React.PureComponent<IProps> {\n  render() {\n    const { isAudioEnabled } = this.props;\n    const logo = isAudioEnabled ? logoEnabled : logoDisabled;\n\n    return (\n      <button onClick={this.props.toggleAudioMuting} className=\"audio-muting\">\n        <img src={logo} alt=\"mute/unmute audio\" className=\"audio-muting__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    isAudioEnabled: store.state.isAudioEnabled,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  toggleAudioMuting: () => {\n    dispatch(toggleAudioMuting());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioMuting);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { toggleCameraMuting } from \"../actions\"\n\nimport logoEnabled from \"./CameraMuting.svg\";\nimport logoDisabled from \"./CameraMutingDisabled.svg\";\nimport \"./CameraMuting.css\";\n\ninterface IProps {\n  isCameraEnabled: boolean,\n  toggleCameraMuting: any,\n}\n\nclass CameraMuting extends React.PureComponent<IProps> {\n  render() {\n    const { isCameraEnabled } = this.props;\n    const logo = isCameraEnabled ? logoEnabled : logoDisabled;\n\n    return (\n      <button onClick={this.props.toggleCameraMuting} className=\"camera-muting\">\n        <img src={logo} alt=\"mute/unmute camera\" className=\"camera-muting__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    isCameraEnabled: store.state.isCameraEnabled,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  toggleCameraMuting: () => {\n    dispatch(toggleCameraMuting());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CameraMuting);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { switchCamera } from \"../actions\"\n\nimport logo from \"./CameraSwitching.svg\";\nimport \"./CameraSwitching.css\";\n\ninterface IProps {\n  switchCamera: any,\n}\n\nclass CameraSwitching extends React.PureComponent<IProps> {\n  render() {\n    return (\n      <button onClick={this.props.switchCamera} className=\"camera-switching\">\n        <img src={logo} alt=\"switch camera\" className=\"camera-switching__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  switchCamera: () => {\n    dispatch(switchCamera());\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(CameraSwitching);\n","import React from \"react\";\n\nimport \"./ToolItem.css\";\n\nclass ToolItem extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <li className=\"tool-item\">\n        { children }\n      </li>\n    );\n  }\n}\n\nexport default ToolItem;\n","import React from \"react\";\n\nimport AudioMuting from \"./AudioMuting\";\nimport CameraMuting from \"./CameraMuting\";\nimport CameraSwitching from \"./CameraSwitching\";\nimport ToolItem from \"./ToolItem\";\n\nimport \"./ToolList.css\";\n\nclass ToolList extends React.PureComponent {\n  render() {\n    return (\n      <ul className=\"tool-list\">\n        <ToolItem>\n          <CameraSwitching />\n        </ToolItem>\n        <ToolItem>\n          <CameraMuting />\n        </ToolItem>\n        <ToolItem>\n          <AudioMuting />\n        </ToolItem>\n      </ul>\n    );\n  }\n}\n\nexport default ToolList;\n","import React from \"react\";\n\nimport AudienceList from \"./AudienceList\";\nimport Presenter from \"./Presenter\";\nimport ToolList from \"./ToolList\";\n\nimport \"./Room.css\";\n\nclass Room extends React.PureComponent {\n  render() {\n    return (\n      <section className=\"room\">\n        <ToolList/>\n        <Presenter/>\n        <AudienceList/>\n      </section>\n    );\n  }\n}\n\nexport default Room;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TStore } from \"../store\";\n\nimport Participation from \"./Participation\";\nimport Room from \"./Room\";\n\nimport \"./App.css\";\n\ninterface IProps {\n  room: any\n}\n\nclass App extends React.PureComponent<IProps> {\n  render() {\n    return (\n      <React.Fragment>\n        { this.props.room ? <Room/> : <Participation/> }\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    room: store.state.room,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\n\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById(\"root\")\n);\n"],"sourceRoot":""}