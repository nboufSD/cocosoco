{"version":3,"sources":["components/Pointing.png","components/AudioMuting.svg","components/AudioMutingDisabled.svg","components/CameraMuting.svg","components/CameraMutingDisabled.svg","components/CameraSwitching.svg","lib/video.tsx","actions.ts","reducer.ts","store.ts","components/Participation.tsx","components/AudienceItem.tsx","components/AudienceList.tsx","components/Pointing.tsx","components/Presenter.tsx","components/AudioMuting.tsx","components/CameraMuting.tsx","components/CameraSwitching.tsx","components/ToolItem.tsx","components/ToolList.tsx","components/Room.tsx","components/App.tsx","index.tsx"],"names":["module","exports","currentIndex","getDevices","a","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","nextVideoStream","nextIndex","length","nextDevice","deviceId","getUserMedia","audio","video","stream","actionCreator","actionCreatorFactory","AddPeerAction","AddPointingAction","async","ParticipateAction","RemovePeerAction","RemovePointingAction","SelectPeerAction","SetPointintAcrion","SwitchCameraAction","ToggleAudioMutingAction","ToggleCameraMutingAction","OnPeerSelectedAction","pointingTimerMap","Map","addPointing","peerId","x","y","dispatch","getState","params","started","clearTimeout","get","timerId","setTimeout","set","done","result","error","failed","onStream","store","state","presenter","room","send","type","onData","data","reducer","reducerWithInitialState","audiences","isAudioEnabled","isCameraEnabled","pointings","case","audience","_selectedPeerId","Object","assign","localPeer","localStream","id","map","isEnabled","find","createStore","combineReducers","applyMiddleware","thunk","Participation","props","_onClick","bind","url","URL","document","key","searchParams","network","e","participate","this","setState","isParticipating","className","onClick","disabled","React","PureComponent","connect","roomId","Promise","r","peer","Peer","on","joinRoom","mode","AudienceItem","_videoRef","createRef","selectPeer","current","srcObject","playsInline","play","_updateVideo","isMuted","isSelected","muted","ref","AudienceList","Pointing","angle","radian","Math","PI","styles","left","top","transform","transformOrigin","style","src","logo","alt","Presenter","target","layerX","layerY","clientWidth","clientHeight","setPointing","p","offsetLeft","offsetTop","atan2","addEventListener","prevProps","_renderPointings","AudioMuting","logoEnabled","logoDisabled","toggleAudioMuting","getAudioTracks","enabled","CameraMuting","toggleCameraMuting","getVideoTracks","CameraSwitching","switchCamera","getTracks","replaceStream","ToolItem","children","ToolList","Room","App","Fragment","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e057c4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pointing.c29bd356.png\";","module.exports = __webpack_public_path__ + \"static/media/AudioMuting.728874bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/AudioMutingDisabled.288ed0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraMuting.6dfcbc6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraMutingDisabled.cd67b22a.svg\";","module.exports = __webpack_public_path__ + \"static/media/CameraSwitching.e1a723d2.svg\";","let currentIndex = -1;\n\nasync function getDevices() {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  return devices.filter(device => device.kind === \"videoinput\");\n}\n\nexport async function nextVideoStream() {\n  const devices = await getDevices();\n\n  const nextIndex = currentIndex === devices.length -1 ? 0 : currentIndex + 1;\n  const nextDevice = devices[nextIndex];\n\n  const deviceId = nextDevice.deviceId;\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: { deviceId },\n  });\n\n  currentIndex = nextIndex;\n\n  return stream;\n}\n","import { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nimport Peer from \"skyway-js\";\nimport { actionCreatorFactory } from \"../node_modules/typescript-fsa\";\n\nimport { nextVideoStream } from \"./lib/video\";\nimport { TStore } from \"./store\";\n\nconst actionCreator = actionCreatorFactory()\n\nexport const AddPeerAction = actionCreator<{ peerId: string, stream: any }>(\"ADD_PEER\");\nexport const AddPointingAction = actionCreator.async<\n  { peerId: string, x: number, y: number },\n  { peerId: string, x: number, y: number },\n  { error: any }\n>(\"ADD_POINTING\");\nexport const ParticipateAction = actionCreator.async<\n  {}, { localPeer: Peer, localStream: MediaStream, room: any }, { error: any }\n>(\"PARTICIPATE\");\nexport const RemovePeerAction = actionCreator<{ peerId: string }>(\"REMOVE_PEER\");\nexport const RemovePointingAction = actionCreator<{ peerId: string }>(\"REMOVE_POINTING\");\nexport const SelectPeerAction = actionCreator.async<{}, {}, { error: any }>(\"SELECT_PEER\");\nexport const SetPointintAcrion = actionCreator.async<{}, {}, { error: any }>(\"SET_POINTING\");\nexport const SwitchCameraAction = actionCreator.async<\n  {}, { localStream: MediaStream }, { error: any }\n>(\"SWITCH_CAMERA\");\nexport const ToggleAudioMutingAction = actionCreator.async<\n  {}, { isEnabled: boolean }, { error: any }\n>(\"TOGGLE_AUDIO_MUTING\");\nexport const ToggleCameraMutingAction = actionCreator.async<\n  {}, { isEnabled: boolean }, { error: any }\n>(\"TOGGLE_CAMERA_MUTING\");\nexport const OnPeerSelectedAction =\n  actionCreator<{ peerId: string }>(\"ON_PEER_SELECTED\");\n\nconst pointingTimerMap = new Map();\n\nexport function participate(key: string, network: \"mesh\" | \"sfu\", roomId: string) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = { key, network, roomId };\n    try {\n      dispatch(ParticipateAction.started(params));\n\n      const localStream = await nextVideoStream();\n      const localPeer: Peer = await new Promise(r => {\n        const peer = new Peer({ key: key });\n        peer.on(\"open\", () => r(peer));\n      });\n\n      const room = localPeer.joinRoom(roomId, {\n        mode: network,\n        stream: localStream\n      });\n\n      room.on(\"peerLeave\", peerId => dispatch(RemovePeerAction({ peerId })));\n      room.on(\"stream\", stream => onStream(dispatch, getState(), stream));\n      room.on(\"data\", ({ data }) => onData(dispatch, data));\n\n      const result = {\n        localPeer,\n        localStream,\n        room,\n      };\n\n      dispatch(ParticipateAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ParticipateAction.failed({ error, params }));\n    }\n  }\n}\n\nfunction addPointing(peerId: string, x: number, y: number) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = { peerId, x, y };\n\n    try {\n      dispatch(AddPointingAction.started(params));\n\n      clearTimeout(pointingTimerMap.get(peerId));\n      const timerId = setTimeout(() => dispatch(RemovePointingAction({ peerId })), 4000);\n      pointingTimerMap.set(peerId, timerId);\n\n      dispatch(AddPointingAction.done({ result: params, params }));\n    } catch (error) {\n      dispatch(AddPointingAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function selectPeer(peerId: string) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(SelectPeerAction.started(params));\n\n      const room = getState()?.state.room;\n      if (room) {\n        room.send({ type: \"peer-selected\", peerId });\n        // As the room.send does not send to the local peer, update manually.\n        dispatch(OnPeerSelectedAction({ peerId }));\n      }\n\n      dispatch(SelectPeerAction.done({ result: {}, params }));\n    } catch (error) {\n      dispatch(SelectPeerAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function setPointing(x: number, y: number) {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(SetPointintAcrion.started(params));\n\n      const state = getState()?.state;\n\n      const peerId = state.localPeer?.id;\n\n      if (peerId) {\n        state.room?.send({ type: \"pointing-added\", peerId, x, y });\n        // As the room.send does not send to the local peer, update manually.\n        dispatch(addPointing(peerId, x, y));\n      }\n\n      dispatch(SetPointintAcrion.done({ result: {}, params }));\n    } catch (error) {\n      dispatch(SetPointintAcrion.failed({ error, params }));\n    }\n  }\n}\n\nexport function switchCamera() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(SwitchCameraAction.started(params));\n\n      const state = getState()?.state;\n\n      // Close previouse stream.\n      for (const track of state?.localStream?.getTracks() || []) {\n        track.enabled = false;\n      }\n\n      const localStream = await nextVideoStream();\n\n      // parameter of replaceStream is defined as MediaSource, but localStream is MediaStream.\n      // I don't know why..\n      (state?.room as any)?.replaceStream(localStream);\n\n      const result = { localStream };\n\n      dispatch(SwitchCameraAction.done({ result, params }));\n    } catch (error) {\n      dispatch(SwitchCameraAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function toggleAudioMuting() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(ToggleAudioMutingAction.started(params));\n\n      const state = getState()?.state;\n      const isEnabled = !state?.isAudioEnabled;\n      const localStream = state?.localStream;\n\n      for (const track of localStream?.getAudioTracks() || []) {\n        track.enabled = isEnabled;\n      }\n\n      const result = { isEnabled };\n\n      dispatch(ToggleAudioMutingAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ToggleAudioMutingAction.failed({ error, params }));\n    }\n  }\n}\n\nexport function toggleCameraMuting() {\n  return async (dispatch: ThunkDispatch<TStore, void, AnyAction>, getState: () => TStore) => {\n    const params = {};\n\n    try {\n      dispatch(ToggleCameraMutingAction.started(params));\n\n      const state = getState()?.state;\n      const isEnabled = !state?.isCameraEnabled;\n      const localStream = state?.localStream;\n\n      for (const track of localStream?.getVideoTracks() || []) {\n        track.enabled = isEnabled;\n      }\n\n      const result = { isEnabled };\n\n      dispatch(ToggleCameraMutingAction.done({ result, params }));\n    } catch (error) {\n      dispatch(ToggleCameraMutingAction.failed({ error, params }));\n    }\n  }\n}\n\nfunction onStream(dispatch: ThunkDispatch<TStore, void, AnyAction>, store: TStore, stream: any) {\n  dispatch(AddPeerAction({ peerId: stream.peerId, stream }));\n  // Tell who is a presenter now, to peer joined newly.\n  if (store.state.presenter) {\n    store.state.room?.send({ type: \"peer-selected\", peerId: store.state.presenter.peerId });\n  }\n}\n\nfunction onData(dispatch: ThunkDispatch<TStore, void, AnyAction>, data: any) {\n  switch (data.type) {\n    case \"peer-selected\": {\n      dispatch(OnPeerSelectedAction({ peerId: data.peerId }));\n      break;\n    }\n    case \"pointing-added\": {\n      dispatch(addPointing(data.peerId, data.x, data.y));\n      break;\n    }\n  }\n}\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\n\nimport {\n  AddPeerAction,\n  AddPointingAction,\n  ParticipateAction,\n  RemovePeerAction,\n  RemovePointingAction,\n  SwitchCameraAction,\n  ToggleAudioMutingAction,\n  ToggleCameraMutingAction,\n  OnPeerSelectedAction,\n} from \"./actions\";\nimport { Member, Pointing } from \"./types\";\n\nexport interface IState {\n  audiences: Member[],\n  isAudioEnabled: boolean,\n  isCameraEnabled: boolean,\n  localPeer?: Peer,\n  localStream?: MediaStream,\n  room?: SFURoom | MeshRoom,\n  pointings: Pointing[],\n  presenter?: Member,\n  // Don't use this. The reason why we need this variable is because the `peer-selected`\n  // event and AddPeerAction timing after joining the room is racing.\n  _selectedPeerId?: string,\n}\n\nconst initialState: IState = {\n  audiences: [],\n  isAudioEnabled: true,\n  isCameraEnabled: true,\n  pointings: [],\n}\n\nexport const reducer = reducerWithInitialState(initialState)\n  .case(AddPeerAction, (state, { peerId, stream }) => {\n    const audience = { peerId, stream };\n    const audiences = [...state.audiences, audience];\n\n    // As the presenter peer joined after firing `peer-selected` event, set as a presenter.\n    const presenter = state._selectedPeerId === peerId ? audience : state.presenter;\n\n    return Object.assign({}, state, { audiences, presenter });\n  })\n  .case(AddPointingAction.done, (state, { result }) => {\n    const { peerId, x, y } = result;\n    const pointings = state.pointings.filter(a => a.peerId !== peerId);\n\n    return Object.assign({}, state, { pointings: [...pointings, { peerId, x, y }] });\n  })\n  .case(ParticipateAction.done, (state, { result }) => {\n    const { localPeer, localStream, room } = result;\n\n    const audience = {\n      peerId: localPeer.id,\n      stream: localStream,\n    };\n    const audiences = [audience];\n\n    return Object.assign({}, state, { audiences, localPeer, localStream, room });\n  })\n  .case(RemovePeerAction, (state, { peerId }) => {\n    const audiences = state.audiences.filter(a => a.peerId !== peerId);\n    const presenter = state.presenter?.peerId === peerId ? null : state.presenter;\n\n    return Object.assign({}, state, { audiences, presenter });\n  })\n  .case(RemovePointingAction, (state, { peerId }) => {\n    const pointings = state.pointings.filter(a => a.peerId !== peerId);\n\n    return Object.assign({}, state, { pointings });\n  })\n  .case(SwitchCameraAction.done, (state, { result }) => {\n    const { localStream } = result;\n    const peerId = state.localPeer?.id;\n\n    const audiences = state.audiences.map(\n      a => a.peerId === peerId ? { peerId, stream: localStream } : a\n    );\n\n    const presenter = state.presenter?.peerId === peerId\n                        ? { peerId, stream: localStream }\n                        : state.presenter;\n\n    return Object.assign({}, state, { audiences, localStream, presenter });\n  })\n  .case(ToggleAudioMutingAction.done, (state, { result }) => {\n    const { isEnabled } = result;\n\n    return Object.assign({}, state, { isAudioEnabled: isEnabled });\n  })\n  .case(ToggleCameraMutingAction.done, (state, { result }) => {\n    const { isEnabled } = result;\n\n    return Object.assign({}, state, { isCameraEnabled: isEnabled });\n  })\n  .case(OnPeerSelectedAction, (state, { peerId }) => {\n    const presenter = state.audiences.find(a => a.peerId === peerId);\n\n    return Object.assign({}, state, { presenter, _selectedPeerId: peerId });\n  })\n","import { combineReducers, createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer, IState } from \"./reducer\";\n\nexport type TStore = {\n  state: IState\n}\n\nexport const store = createStore(\n  combineReducers<TStore>({\n    state: reducer\n  }),\n  {},\n  applyMiddleware(thunk)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { participate } from \"../actions\"\n\nimport \"./Participation.css\";\n\ninterface IProps {\n  participate: any\n}\n\ninterface IState {\n  key: string | null,\n  network: string | null,\n  room: string | null,\n  error: string | null,\n  isParticipating?: boolean,\n}\n\nclass Participation extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n\n    const url = new URL(document.URL);\n    const key = url.searchParams.get(\"key\");\n    const network = url.searchParams.get(\"network\");\n    const room = url.searchParams.get(\"room\");\n\n    let error = null;\n    if (!key || !network || !room) {\n      error = \"No specific key, network or room\"\n    } else if (network !== \"sfu\" && network !== \"mesh\") {\n      error = \"Network should be 'sfu' or 'mesh'\";\n    }\n\n    this.state = { key, network, room, error };\n  }\n\n  _onClick(e: React.MouseEvent) {\n    const { participate } = this.props;\n    const { key, network, room } = this.state;\n    this.setState({ isParticipating: true });\n    participate(key, network, room);\n  }\n\n  render() {\n    const { room, error, isParticipating } = this.state;\n\n    return (\n      <section className=\"participation\">\n        {\n          error\n            ? <label className=\"participation__error\">{ error }</label>\n            : <button\n                className=\"participation__button\"\n                onClick={this._onClick}\n                disabled={isParticipating}\n              >\n                <label>participate to </label>\n                <label className=\"participation__room\">{ room }</label>\n              </button>\n        }\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  participate: (key: string, network: \"mesh\" | \"sfu\", room: string) => {\n    dispatch(participate(key, network, room));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Participation);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { selectPeer } from \"../actions\"\nimport { Member } from \"../types\";\n\nimport \"./AudienceItem.css\";\n\ninterface IProps {\n  audience: Member,\n  isMuted: boolean,\n  isSelected: boolean,\n  selectPeer: any,\n}\n\nclass AudienceItem extends React.PureComponent<IProps> {\n  // As video.playsInline is not defined in HTMLVideoElement, add \"any\" as well.\n  private _videoRef = React.createRef<HTMLVideoElement | any>();\n\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    const { audience, selectPeer } = this.props;\n    selectPeer(audience.peerId);\n  }\n\n  _updateVideo() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    const { audience } = this.props;\n    video.srcObject = audience.stream;\n    video.playsInline = true;\n    video.play();\n  }\n\n  componentDidMount() {\n    this._updateVideo();\n  }\n\n  componentDidUpdate() {\n    this._updateVideo();\n  }\n\n  render() {\n    const { isMuted, isSelected } = this.props;\n\n    return (\n      <li\n        className={\"audience-item \" + (isSelected ? \"audience-item--selected\" : \"\")}\n        onClick={ this._onClick }\n      >\n        <video className=\"audience-item__video\" muted={isMuted} ref={this._videoRef}></video>\n      </li>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  selectPeer: (peerId: string) => {\n    dispatch(selectPeer(peerId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(AudienceItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { TStore } from \"../store\";\nimport { Member } from \"../types\";\n\nimport AudienceItem from \"./AudienceItem\";\n\nimport \"./AudienceList.css\";\n\ninterface IProps {\n  audiences: Member[],\n  localPeer?: Peer,\n  presenter?: Member,\n}\n\nclass AudienceList extends React.PureComponent<IProps> {\n  render() {\n    const { audiences, localPeer, presenter } = this.props;\n\n    return (\n      <ul className=\"audience-list\">\n        {\n          audiences.map(audience =>\n            <AudienceItem\n              key={ audience.peerId }\n              audience={ audience }\n              isMuted={ audience.peerId === localPeer?.id }\n              isSelected={ audience.peerId === presenter?.peerId }\n            />\n          )\n        }\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    audiences: store.state.audiences,\n    localPeer: store.state.localPeer,\n    presenter: store.state.presenter,\n  }\n}\n\nexport default connect(mapStateToProps)(AudienceList);\n","import React from \"react\";\n\nimport logo from './Pointing.png';\nimport \"./Pointing.css\";\n\ninterface IProps {\n  peerId: string,\n  x: number,\n  y: number,\n  radian: number,\n}\n\nclass Pointing extends React.PureComponent<IProps> {\n  render() {\n    const { peerId, x, y, radian } = this.props;\n\n    const angle = radian * 180 / Math.PI;\n    const styles = {\n      left: `${ x }px`,\n      top: `${ y }px`,\n      transform: `translate(-60%, 0%) rotate(${angle}deg) scale(${angle > 0 ? -1 : 1}, 1)`,\n      transformOrigin: \"60% 0%\",\n    };\n\n    return (\n      <mark className=\"pointing\" style={styles}>\n        <img src={logo} alt={peerId} className=\"pointing__image\" />\n      </mark>\n    );\n  }\n}\n\nexport default Pointing;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { Member, Pointing } from \"../types\";\nimport { setPointing } from \"../actions\"\nimport PointingComponent from \"./Pointing\";\n\nimport \"./Presenter.css\";\n\ninterface IProps {\n  localPeer?: Peer,\n  pointings: Pointing[],\n  presenter?: Member,\n  setPointing: any,\n}\n\nclass Presenter extends React.PureComponent<IProps> {\n  // As video.playsInline is not defined in HTMLVideoElement, add \"any\" as well.\n  private _videoRef = React.createRef<HTMLVideoElement | any>();\n\n  constructor(props: IProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: any) {\n    const { target, layerX, layerY } = e;\n    const { clientWidth, clientHeight } = target;\n    const x = layerX / clientWidth;\n    const y = layerY / clientHeight;\n    this.props.setPointing(x, y);\n  }\n\n  _renderPointings() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return null;\n    }\n\n    const { pointings } = this.props;\n    return pointings.map(p => {\n      const peerId = p.peerId;\n      const x = video.offsetLeft + video.clientWidth * p.x;\n      const y = video.offsetTop + video.clientHeight * p.y;\n      const radian = Math.atan2(p.x - 0.5, -(p.y - 0.5));\n\n      return <PointingComponent key={peerId} peerId={peerId} x={x} y={y} radian={radian}/>;\n    });\n  }\n\n  componentDidMount() {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    // We can't get layerX/layerY from React mouse event.\n    video.addEventListener(\"click\", this._onClick);\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const video = this._videoRef.current;\n    if (!video) {\n      return;\n    }\n\n    const { localPeer, presenter } = this.props;\n    if (prevProps.presenter === presenter) {\n      return;\n    }\n\n    if (presenter) {\n      video.muted = localPeer?.id === presenter.peerId;\n      video.srcObject = presenter.stream;\n      video.playsInline = true;\n      video.play();\n    } else {\n      video.srcObject = null;\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"presenter\">\n        <video className=\"presenter__video\" ref={this._videoRef}></video>\n        { this._renderPointings() }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    localPeer: store.state.localPeer,\n    pointings: store.state.pointings,\n    presenter: store.state.presenter,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  setPointing: (x: number, y: number) => {\n    dispatch(setPointing(x, y));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Presenter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { toggleAudioMuting } from \"../actions\"\n\nimport logoEnabled from \"./AudioMuting.svg\";\nimport logoDisabled from \"./AudioMutingDisabled.svg\";\nimport \"./AudioMuting.css\";\n\ninterface IProps {\n  isAudioEnabled: boolean,\n  toggleAudioMuting: any,\n}\n\nclass AudioMuting extends React.PureComponent<IProps> {\n  render() {\n    const { isAudioEnabled } = this.props;\n    const logo = isAudioEnabled ? logoEnabled : logoDisabled;\n\n    return (\n      <button onClick={this.props.toggleAudioMuting} className=\"audio-muting\">\n        <img src={logo} alt=\"mute/unmute audio\" className=\"audio-muting__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    isAudioEnabled: store.state.isAudioEnabled,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  toggleAudioMuting: () => {\n    dispatch(toggleAudioMuting());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioMuting);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { toggleCameraMuting } from \"../actions\"\n\nimport logoEnabled from \"./CameraMuting.svg\";\nimport logoDisabled from \"./CameraMutingDisabled.svg\";\nimport \"./CameraMuting.css\";\n\ninterface IProps {\n  isCameraEnabled: boolean,\n  toggleCameraMuting: any,\n}\n\nclass CameraMuting extends React.PureComponent<IProps> {\n  render() {\n    const { isCameraEnabled } = this.props;\n    const logo = isCameraEnabled ? logoEnabled : logoDisabled;\n\n    return (\n      <button onClick={this.props.toggleCameraMuting} className=\"camera-muting\">\n        <img src={logo} alt=\"mute/unmute camera\" className=\"camera-muting__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    isCameraEnabled: store.state.isCameraEnabled,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  toggleCameraMuting: () => {\n    dispatch(toggleCameraMuting());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CameraMuting);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nimport { TStore } from \"../store\";\nimport { switchCamera } from \"../actions\"\n\nimport logo from \"./CameraSwitching.svg\";\nimport \"./CameraSwitching.css\";\n\ninterface IProps {\n  switchCamera: any,\n}\n\nclass CameraSwitching extends React.PureComponent<IProps> {\n  render() {\n    return (\n      <button onClick={this.props.switchCamera} className=\"camera-switching\">\n        <img src={logo} alt=\"switch camera\" className=\"camera-switching__image\" />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<TStore, void, AnyAction>) => ({\n  switchCamera: () => {\n    dispatch(switchCamera());\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(CameraSwitching);\n","import React from \"react\";\n\nimport \"./ToolItem.css\";\n\nclass ToolItem extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <li className=\"tool-item\">\n        { children }\n      </li>\n    );\n  }\n}\n\nexport default ToolItem;\n","import React from \"react\";\n\nimport AudioMuting from \"./AudioMuting\";\nimport CameraMuting from \"./CameraMuting\";\nimport CameraSwitching from \"./CameraSwitching\";\nimport ToolItem from \"./ToolItem\";\n\nimport \"./ToolList.css\";\n\nclass ToolList extends React.PureComponent {\n  render() {\n    return (\n      <ul className=\"tool-list\">\n        <ToolItem>\n          <CameraSwitching />\n        </ToolItem>\n        <ToolItem>\n          <CameraMuting />\n        </ToolItem>\n        <ToolItem>\n          <AudioMuting />\n        </ToolItem>\n      </ul>\n    );\n  }\n}\n\nexport default ToolList;\n","import React from \"react\";\n\nimport AudienceList from \"./AudienceList\";\nimport Presenter from \"./Presenter\";\nimport ToolList from \"./ToolList\";\n\nimport \"./Room.css\";\n\nclass Room extends React.PureComponent {\n  render() {\n    return (\n      <section className=\"room\">\n        <ToolList/>\n        <Presenter/>\n        <AudienceList/>\n      </section>\n    );\n  }\n}\n\nexport default Room;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TStore } from \"../store\";\n\nimport Participation from \"./Participation\";\nimport Room from \"./Room\";\n\nimport \"./App.css\";\n\ninterface IProps {\n  room: any\n}\n\nclass App extends React.PureComponent<IProps> {\n  render() {\n    return (\n      <React.Fragment>\n        { this.props.room ? <Room/> : <Participation/> }\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store: TStore) => {\n  return {\n    room: store.state.room,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\n\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById(\"root\")\n);\n"],"sourceRoot":""}